// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"github.com/labstack/echo/v4"
	"isustrategisService/app"
	"isustrategisService/controller"
	"isustrategisService/repository"
	"isustrategisService/service"
)

// Injectors from injector.go:

func InitializedServer() *echo.Echo {
	csfRepositoryImpl := repository.NewCsfRepositoryImpl()
	db := app.GetConnection()
	v := _wireValue
	validate := validator.New(v...)
	csfServiceImpl := service.NewCsfServiceImpl(csfRepositoryImpl, db, validate)
	csfControllerImpl := controller.NewCsfControllerImpl(csfServiceImpl)
	outcomeRepositoryImpl := repository.NewOutcomeRepositoryImpl()
	outcomeServiceImpl := service.NewOutcomeServiceImpl(outcomeRepositoryImpl, db)
	outcomeControllerImpl := controller.NewOutcomeControllerImpl(outcomeServiceImpl)
	intermediateRepositoryImpl := repository.NewIntermediateRepositoryImpl()
	intermediateServiceImpl := service.NewIntermediateServiceImpl(intermediateRepositoryImpl, db)
	intermediateControllerImpl := controller.NewIntermediateControllerImpl(intermediateServiceImpl)
	echoEcho := app.NewRouter(csfControllerImpl, outcomeControllerImpl, intermediateControllerImpl)
	return echoEcho
}

var (
	_wireValue = []validator.Option{}
)

// injector.go:

var csfSet = wire.NewSet(repository.NewCsfRepositoryImpl, wire.Bind(new(repository.CsfRepository), new(*repository.CsfRepositoryImpl)), service.NewCsfServiceImpl, wire.Bind(new(service.CsfService), new(*service.CsfServiceImpl)), controller.NewCsfControllerImpl, wire.Bind(new(controller.CsfController), new(*controller.CsfControllerImpl)))

var outcomeSet = wire.NewSet(repository.NewOutcomeRepositoryImpl, wire.Bind(new(repository.OutcomeRepository), new(*repository.OutcomeRepositoryImpl)), service.NewOutcomeServiceImpl, wire.Bind(new(service.OutcomeService), new(*service.OutcomeServiceImpl)), controller.NewOutcomeControllerImpl, wire.Bind(new(controller.OutcomeController), new(*controller.OutcomeControllerImpl)))

var intermediateSet = wire.NewSet(repository.NewIntermediateRepositoryImpl, wire.Bind(new(repository.IntermediateRepository), new(*repository.IntermediateRepositoryImpl)), service.NewIntermediateServiceImpl, wire.Bind(new(service.IntermediateService), new(*service.IntermediateServiceImpl)), controller.NewIntermediateControllerImpl, wire.Bind(new(controller.IntermediateController), new(*controller.IntermediateControllerImpl)))

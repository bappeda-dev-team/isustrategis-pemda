// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"github.com/labstack/echo/v4"
	"isustrategisService/app"
	"isustrategisService/controller"
	"isustrategisService/repository"
	"isustrategisService/service"
)

// Injectors from injector.go:

func InitializedServer() *echo.Echo {
	csfRepositoryImpl := repository.NewCsfRepositoryImpl()
	db := app.GetConnection()
	v := _wireValue
	validate := validator.New(v...)
	csfServiceImpl := service.NewCsfServiceImpl(csfRepositoryImpl, db, validate)
	csfControllerImpl := controller.NewCsfControllerImpl(csfServiceImpl)
	echoEcho := app.NewRouter(csfControllerImpl)
	return echoEcho
}

var (
	_wireValue = []validator.Option{}
)

// injector.go:

var csfSet = wire.NewSet(repository.NewCsfRepositoryImpl, wire.Bind(new(repository.CsfRepository), new(*repository.CsfRepositoryImpl)), service.NewCsfServiceImpl, wire.Bind(new(service.CsfService), new(*service.CsfServiceImpl)), controller.NewCsfControllerImpl, wire.Bind(new(controller.CsfController), new(*controller.CsfControllerImpl)))
